%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.11.2

-ifndef(state_channel_client_pb).
-define(state_channel_client_pb, true).

-define(state_channel_client_pb_gpb_version, "4.11.2").

-ifndef('BLOCKCHAIN_STATE_CHANNEL_SUMMARY_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_SUMMARY_V1_PB_PB_H', true).
-record(blockchain_state_channel_summary_v1_pb,
        {client_pubkeybin = <<>> :: iodata() | undefined, % = 1
         num_packets = 0        :: non_neg_integer() | undefined, % = 2, 64 bits
         num_dcs = 0            :: non_neg_integer() | undefined % = 3, 64 bits
        }).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_V1_PB_PB_H', true).
-record(blockchain_state_channel_v1_pb,
        {id = <<>>              :: iodata() | undefined, % = 1
         owner = <<>>           :: iodata() | undefined, % = 2
         credits = 0            :: non_neg_integer() | undefined, % = 3, 64 bits
         nonce = 0              :: non_neg_integer() | undefined, % = 4, 64 bits
         summaries = []         :: [state_channel_client_pb:blockchain_state_channel_summary_v1_pb()] | undefined, % = 5
         root_hash = <<>>       :: iodata() | undefined, % = 6
         skewed = <<>>          :: iodata() | undefined, % = 7
         state = open           :: open | closed | integer() | undefined, % = 8, enum helium.blockchain_state_channel_state_v1
         expire_at_block = 0    :: non_neg_integer() | undefined, % = 9, 64 bits
         signature = <<>>       :: iodata() | undefined % = 10
        }).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_RESPONSE_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_RESPONSE_V1_PB_PB_H', true).
-record(blockchain_state_channel_response_v1_pb,
        {accepted = false       :: boolean() | 0 | 1 | undefined, % = 1
         downlink = undefined   :: state_channel_client_pb:packet_pb() | undefined % = 4
        }).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_PACKET_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_PACKET_V1_PB_PB_H', true).
-record(blockchain_state_channel_packet_v1_pb,
        {packet = undefined     :: state_channel_client_pb:packet_pb() | undefined, % = 1
         hotspot = <<>>         :: iodata() | undefined, % = 2
         signature = <<>>       :: iodata() | undefined, % = 3
         region = 'US915'       :: 'US915' | 'EU868' | 'EU433' | 'CN470' | 'CN779' | 'AU915' | 'AS923_1' | 'KR920' | 'IN865' | 'AS923_2' | 'AS923_3' | 'AS923_4' | integer() | undefined, % = 4, enum helium.region
         hold_time = 0          :: non_neg_integer() | undefined % = 5, 64 bits
        }).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_OFFER_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_OFFER_V1_PB_PB_H', true).
-record(blockchain_state_channel_offer_v1_pb,
        {routing = undefined    :: state_channel_client_pb:routing_information_pb() | undefined, % = 1
         packet_hash = <<>>     :: iodata() | undefined, % = 2
         payload_size = 0       :: non_neg_integer() | undefined, % = 3, 64 bits
         fcnt = 0               :: non_neg_integer() | undefined, % = 4, 32 bits
         hotspot = <<>>         :: iodata() | undefined, % = 5
         signature = <<>>       :: iodata() | undefined, % = 6
         region = 'US915'       :: 'US915' | 'EU868' | 'EU433' | 'CN470' | 'CN779' | 'AU915' | 'AS923_1' | 'KR920' | 'IN865' | 'AS923_2' | 'AS923_3' | 'AS923_4' | integer() | undefined, % = 7, enum helium.region
         req_diff = false       :: boolean() | 0 | 1 | undefined % = 8
        }).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_PURCHASE_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_PURCHASE_V1_PB_PB_H', true).
-record(blockchain_state_channel_purchase_v1_pb,
        {sc = undefined         :: state_channel_client_pb:blockchain_state_channel_v1_pb() | undefined, % = 1
         hotspot = <<>>         :: iodata() | undefined, % = 2
         packet_hash = <<>>     :: iodata() | undefined, % = 3
         region = 'US915'       :: 'US915' | 'EU868' | 'EU433' | 'CN470' | 'CN779' | 'AU915' | 'AS923_1' | 'KR920' | 'IN865' | 'AS923_2' | 'AS923_3' | 'AS923_4' | integer() | undefined, % = 4, enum helium.region
         sc_diff = undefined    :: state_channel_client_pb:blockchain_state_channel_diff_v1_pb() | undefined % = 5
        }).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_DIFF_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_DIFF_V1_PB_PB_H', true).
-record(blockchain_state_channel_diff_v1_pb,
        {id = <<>>              :: iodata() | undefined, % = 1
         add_nonce = 0          :: non_neg_integer() | undefined, % = 2, 64 bits
         signature = <<>>       :: iodata() | undefined, % = 3
         diffs = []             :: [state_channel_client_pb:blockchain_state_channel_diff_entry_v1_pb()] | undefined % = 4
        }).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_DIFF_ENTRY_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_DIFF_ENTRY_V1_PB_PB_H', true).
-record(blockchain_state_channel_diff_entry_v1_pb,
        {entry                  :: {append, state_channel_client_pb:blockchain_state_channel_diff_append_summary_v1_pb()} | {add, state_channel_client_pb:blockchain_state_channel_diff_update_summary_v1_pb()} | undefined % oneof
        }).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_DIFF_APPEND_SUMMARY_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_DIFF_APPEND_SUMMARY_V1_PB_PB_H', true).
-record(blockchain_state_channel_diff_append_summary_v1_pb,
        {client_pubkeybin = <<>> :: iodata() | undefined, % = 1
         num_packets = 0        :: non_neg_integer() | undefined, % = 2, 64 bits
         num_dcs = 0            :: non_neg_integer() | undefined % = 3, 64 bits
        }).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_DIFF_UPDATE_SUMMARY_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_DIFF_UPDATE_SUMMARY_V1_PB_PB_H', true).
-record(blockchain_state_channel_diff_update_summary_v1_pb,
        {client_index = 0       :: non_neg_integer() | undefined, % = 1, 64 bits
         add_packets = 0        :: non_neg_integer() | undefined, % = 2, 64 bits
         add_dcs = 0            :: non_neg_integer() | undefined % = 3, 64 bits
        }).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_BANNER_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_BANNER_V1_PB_PB_H', true).
-record(blockchain_state_channel_banner_v1_pb,
        {sc = undefined         :: state_channel_client_pb:blockchain_state_channel_v1_pb() | undefined % = 1
        }).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_REJECTION_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_REJECTION_V1_PB_PB_H', true).
-record(blockchain_state_channel_rejection_v1_pb,
        {reject = 0             :: non_neg_integer() | undefined, % = 1, 32 bits
         packet_hash = <<>>     :: iodata() | undefined % = 2
        }).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_MESSAGE_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_MESSAGE_V1_PB_PB_H', true).
-record(blockchain_state_channel_message_v1_pb,
        {msg                    :: {response, state_channel_client_pb:blockchain_state_channel_response_v1_pb()} | {packet, state_channel_client_pb:blockchain_state_channel_packet_v1_pb()} | {offer, state_channel_client_pb:blockchain_state_channel_offer_v1_pb()} | {purchase, state_channel_client_pb:blockchain_state_channel_purchase_v1_pb()} | {banner, state_channel_client_pb:blockchain_state_channel_banner_v1_pb()} | {reject, state_channel_client_pb:blockchain_state_channel_rejection_v1_pb()} | undefined % oneof
        }).
-endif.

-ifndef('EUI_PB_PB_H').
-define('EUI_PB_PB_H', true).
-record(eui_pb,
        {deveui = 0             :: non_neg_integer() | undefined, % = 1, 64 bits
         appeui = 0             :: non_neg_integer() | undefined % = 2, 64 bits
        }).
-endif.

-ifndef('ROUTING_INFORMATION_PB_PB_H').
-define('ROUTING_INFORMATION_PB_PB_H', true).
-record(routing_information_pb,
        {data                   :: {devaddr, non_neg_integer()} | {eui, state_channel_client_pb:eui_pb()} | undefined % oneof
        }).
-endif.

-ifndef('WINDOW_PB_PB_H').
-define('WINDOW_PB_PB_H', true).
-record(window_pb,
        {timestamp = 0          :: non_neg_integer() | undefined, % = 1, 64 bits
         frequency = 0.0        :: float() | integer() | infinity | '-infinity' | nan | undefined, % = 2
         datarate = []          :: iodata() | undefined % = 3
        }).
-endif.

-ifndef('PACKET_PB_PB_H').
-define('PACKET_PB_PB_H', true).
-record(packet_pb,
        {oui = 0                :: non_neg_integer() | undefined, % = 1, 32 bits
         type = longfi          :: longfi | lorawan | integer() | undefined, % = 2, enum packet_pb.packet_type
         payload = <<>>         :: iodata() | undefined, % = 3
         timestamp = 0          :: non_neg_integer() | undefined, % = 4, 64 bits
         signal_strength = 0.0  :: float() | integer() | infinity | '-infinity' | nan | undefined, % = 5
         frequency = 0.0        :: float() | integer() | infinity | '-infinity' | nan | undefined, % = 6
         datarate = []          :: iodata() | undefined, % = 7
         snr = 0.0              :: float() | integer() | infinity | '-infinity' | nan | undefined, % = 8
         routing = undefined    :: state_channel_client_pb:routing_information_pb() | undefined, % = 9
         rx2_window = undefined :: state_channel_client_pb:window_pb() | undefined % = 10
        }).
-endif.

-endif.
